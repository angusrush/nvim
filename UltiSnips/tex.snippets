# Useful functions

global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'V', 'W', 'X', 'Y', 'Z']]
# If you have http://www.drchip.org/astronaut/vim/vbafiles/amsmath.vba.gz,
# you want to add:
texMathZones += ['texMathZone'+x for x in ['E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS']]
texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

def isMath():
    synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
    if not set(texIgnoreMathZoneIds).isdisjoint(synstackids):
        return False
    return not set(texMathZoneIds).isdisjoint(synstackids)
    # isdisjoint() can short-circuit as soon as a match is found

endglobal

# Environments

snippet pac "Package" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet

snippet cha "Chapter" b
\chapter{${1:chapter name}}
\label{ch:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}$0
endsnippet

snippet sec "Section" b
\section{${1:section name}}
\label{sec:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}$0
endsnippet

snippet ssc "Subsection" b
\subsection{${1:subsection name}}
\label{ssc:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}$0
endsnippet

snippet sss "Subsubsection" b
\subsection{${1:subsection name}}
\label{sss:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}$0
endsnippet

snippet prop "proposition enviromnent" b
\begin{proposition}
  ${VISUAL}$1
\end{proposition}
endsnippet

snippet thm "theorem enviromnent" b
\begin{theorem}
  ${VISUAL}$1
\end{theorem}
endsnippet

snippet lemma "lemma enviromnent" b
\begin{lemma}
  \label{lemma:$1}
  ${VISUAL}$2
\end{lemma}
endsnippet

snippet fact "fact enviromnent" b
\begin{fact}
  \label{fact:$1}
  ${VISUAL}$2
\end{fact}
endsnippet

snippet proof "proof enviromnent" b
\begin{proof}
  ${VISUAL}$1
\end{proof}
endsnippet

snippet cor "corollary enviromnent" b
\begin{corollary}
  ${VISUAL}$1
\end{corollary}
endsnippet

snippet eg "example enviromnent" b
\begin{example}
  ${VISUAL}$1
\end{example}
endsnippet

snippet note "note enviromnent" b
\begin{note}
  ${VISUAL}$1
\end{note}
endsnippet

snippet "eq(uation)?" "unnumbered equation" br
\begin{equation*}
  ${VISUAL}$1
\end{equation*}
endsnippet

snippet "gat" "unnumbered gather" br
\begin{gather*}
  ${VISUAL}$1
\end{gather*}
endsnippet

snippet "beg(in)?" "generic environment" br
\begin{${1:something}}
  ${0:${VISUAL}}
\end{$1}
endsnippet

snippet ali "unnumbered align" b
\begin{align*}
  ${VISUAL}$1
\end{align*}
endsnippet

snippet ecd "tikzcd" b
\begin{equation*}
  \begin{tikzcd}
    ${VISUAL}$1
  \end{tikzcd}
\end{equation*}
endsnippet

snippet def "definition" b
\begin{definition}[${1:definition name}]
  \label{def:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
  ${VISUAL}$3
\end{definition}
endsnippet

snippet mat "generic matrix" b
\begin{$1matrix}
  $2${VISUAL}
\end{$1matrix}
endsnippet

snippet enum "enumerate" b
\begin{enumerate}
  \item $1${VISUAL}
\end{enumerate}
endsnippet

snippet item "itemize" b
\begin{itemize}
  \item $1${VISUAL}
\end{itemize}
endsnippet

snippet cas "cases" b
\begin{cases}
  $1${VISUAL}
\end{cases}
endsnippet

# Math Fonts
context "isMath()"
snippet mcl "mathcal" i
\mathcal{$1${VISUAL}}
endsnippet

context "isMath()"
snippet mfk "mathfrak" i
\mathfrak{$1${VISUAL}}
endsnippet

context "isMath()"
snippet mrm "mathrm" i
\mathrm{$1${VISUAL}}
endsnippet

context "isMath()"
snippet msc "mathscr" i
\mathscr{$1${VISUAL}}
endsnippet

context "isMath()"
snippet mbb "mathbb" i
\mathbb{$1${VISUAL}}
endsnippet

context "isMath()"
snippet mbf "mathbf" i
\mathbf{$1${VISUAL}}
endsnippet

context "isMath()"
snippet msf "mathsf" i
\mathsf{$1${VISUAL}}
endsnippet

context "isMath()"
snippet co "category" i
\category{$1${VISUAL}}
endsnippet

context "isMath()"
snippet cn "category name" i
\catname{$1${VISUAL}}
endsnippet


# Text fonts

snippet tbf "textbf" i
\textbf{$1${VISUAL}}
endsnippet

snippet tit "textit" i
\textit{$1${VISUAL}}
endsnippet

snippet emp "emph" i
\emph{$1${VISUAL}}
endsnippet


# Math mode shortcuts

context "isMath()"
snippet ale "aligned equals (&=)" i
&=
endsnippet

context "isMath()"
snippet 6 "inserts exponent" i
^{${VISUAL}$1}
endsnippet

context "isMath()"
snippet sim "\sim" i
\sim
endsnippet

context "isMath()"
snippet cg "\cong" i
\cong
endsnippet

context "isMath()"
snippet sl "inserts \slashed{}" i
\slashed{${VISUAL}$1}
endsnippet

context "isMath()"
snippet tt "inserts exponent" i
^{${VISUAL}$1}
endsnippet

context "isMath()"
snippet vec "inserts vector symbol" i
\vec{${VISUAL}$1}
endsnippet

context "isMath()"
snippet Ob "inserts \Obj" i
\Obj
endsnippet

context "isMath()"
snippet ten "tensor" i
\tensor{${VISUAL}$1}{$2}
endsnippet

context "isMath()"
snippet arr "Simple arrow latex snippet"
\arrow[$1]
endsnippet

context "isMath()"
snippet to "To"
\to
endsnippet

context "isMath()"
snippet we "wedge"
\wedge
endsnippet

context "isMath()"
snippet ci "circ"
\circ
endsnippet

context "isMath()"
snippet ama "amalg"
\amalg
endsnippet

context "isMath()"
snippet ti "times"
\times
endsnippet

context "isMath()"
snippet otm "times" i
\otimes
endsnippet

context "isMath()"
snippet opl "oplus"
\oplus
endsnippet

context "isMath()"
snippet mto "mapsto"
\mapsto
endsnippet

context "isMath()"
snippet imp "Implies"
\implies
endsnippet

context "isMath()"
snippet ls "ldots" i
\ldots
endsnippet

context "isMath()"
snippet cs "cdots" i
\cdots
endsnippet

context "isMath()"
snippet vs "vdots" i
\vdots
endsnippet

context "isMath()"
snippet ds "ddots" i
\ddots
endsnippet

context "isMath()"
snippet - "inline underscore" i
_{${VISUAL}$1}
endsnippet

context "isMath()"
snippet ll "limits" i
_{${VISUAL}$1}^{$2}
endsnippet

context "isMath()"
snippet LL "limits" i
^{${VISUAL}$1}_{$2}
endsnippet

context "isMath()"
snippet til "\tilde{}" i
\tilde{${VISUAL}$1}
endsnippet

context "isMath()"
snippet inv "interval" i
\interval[$1]{$2}{$3}
endsnippet

context "isMath()"
snippet op "op" i
\op
endsnippet

context "isMath()"
snippet tiw "\widetilde{}" i
\widetilde{${VISUAL}$1}
endsnippet

context "isMath()"
snippet ; "colon" i
\colon
endsnippet

context "isMath()"
snippet pa "partial" i
\partial
endsnippet

context "isMath()"
snippet hat "\hat{}" i
\hat{${VISUAL}$1}
endsnippet

context "isMath()"
snippet text "\text{}" i
\text{${VISUAL}$1}
endsnippet

context "isMath()"
snippet int "integral" i
\int
endsnippet

context "isMath()"
snippet sum "sum" i
\sum
endsnippet

context "isMath()"
snippet / "fraction" i
\frac{${VISUAL}$1}{$2}
endsnippet

context "isMath()"
snippet pdr "partial derivative" i
\pder{${VISUAL}$1}{$2}
endsnippet

context "isMath()"
snippet tdr "total derivative" i
\tder{$1}{$2}
endsnippet

context "isMath()"
snippet 2 "square root" i
\sqrt{$1}
endsnippet

context "isMath()"
snippet 8 "infinity" i
\infty
endsnippet

context "isMath()"
snippet in "\in" i
\in
endsnippet

context "isMath()"
snippet \ "smallsetminus" i
\smallsetminus
endsnippet

context "isMath()"
snippet | "mid" i
\mid
endsnippet

context "isMath()"
snippet . "cdot" i
\cdot
endsnippet

context "isMath()"
snippet qq "qquad" i
\qquad
endsnippet

context "isMath()"
snippet ss "subset" i
\subset
endsnippet

context "isMath()"
snippet sp "supset" i
\supset
endsnippet

context "isMath()"
snippet cu "supset" i
\cup
endsnippet

context "isMath()"
snippet ca "supset" i
\cap
endsnippet

context "isMath()"
snippet bu "big union (cup)" i
\bigcup
endsnippet

context "isMath()"
snippet bi "big intersection (cap)" i
\bigcap
endsnippet

# Text mode shortcuts

snippet df "inline definition" i
\defn{$1${VISUAL}}
endsnippet

snippet href "hyperref" i
\hyperref[$1]{$2~\ref*{$1}}
endsnippet

snippet lbl "label" i
\label{$1}
endsnippet

global !p
def fix_indent(snip):
    vim.eval('feedkeys("\<c-f>")')
endglobal

post_expand "fix_indent(snip)"
snippet it "Individual item" b
\item $0
endsnippet

snippet 4 "inline mathmode" i
$${VISUAL}$1$
endsnippet

snippet ' "inline quotes" i
"${VISUAL}$1"
endsnippet

# Delimiters

snippet 9 "small parentheses" i
(${VISUAL}$1)
endsnippet

snippet 0 "big parentheses" i
\left( ${VISUAL}$1 \right)
endsnippet

snippet < "small langles" i
\langle ${VISUAL}$1 \rangle
endsnippet

snippet > "big langles" i
\left\langle ${VISUAL}$1 \right\rangle
endsnippet

snippet [ "small square braces" i
[${VISUAL}$1]
endsnippet

snippet ] "big square braces" i
\left[ ${VISUAL}$1 \right]
endsnippet

snippet { "small curly braces" i
\{${VISUAL}$1\}
endsnippet

snippet b "escaped escaped curly braces" i
\\{${VISUAL}$1\\}
endsnippet

snippet } "big curly braces" i
\left\\\{ ${VISUAL}$1 \right\\\}
endsnippet

snippet ev "big evaluate at pipe" i
\left. ${VISUAL}$1 \right|
endsnippet

snippet abs "absolute value" i
\abs{${VISUAL}$1}
endsnippet

snippet bar "bar" i
\bar{${VISUAL}$1}
endsnippet

snippet norm "norm" i
\norm{${VISUAL}$1}
endsnippet

# Greek letters

context "isMath()"
snippet na "\nabla" i
\nabla
endsnippet

context "isMath()"
snippet al "\alpha" i
\alpha
endsnippet

context "isMath()"
snippet be "\beta" i
\beta
endsnippet

context "isMath()"
snippet ga "\gamma" i
\gamma
endsnippet

context "isMath()"
snippet gav "\digamma" i
\digamma
endsnippet

context "isMath()"
snippet de "\delta" i
\delta
endsnippet

context "isMath()"
snippet ep "\epsilon" i
\epsilon
endsnippet

context "isMath()"
snippet epv "\varepsilon" i
\varepsilon
endsnippet

context "isMath()"
snippet ze "\zeta" i
\zeta
endsnippet

context "isMath()"
snippet et "\eta" i
\eta
endsnippet

context "isMath()"
snippet th "\theta" i
\theta
endsnippet

context "isMath()"
snippet thv "\vartheta" i
\vartheta
endsnippet

context "isMath()"
snippet io "\iota" i
\iota
endsnippet

context "isMath()"
snippet ka "\kappa" i
\kappa
endsnippet

context "isMath()"
snippet kav "\varkappa" i
\varkappa
endsnippet

context "isMath()"
snippet la "\lambda" i
\lambda
endsnippet

context "isMath()"
snippet mu "\mu" i
\mu
endsnippet

context "isMath()"
snippet nu "\nu" i
\nu
endsnippet

context "isMath()"
snippet xi "\xi" i
\xi
endsnippet

context "isMath()"
snippet pi "\pi" i
\pi
endsnippet

context "isMath()"
snippet piv "\varpi" i
\varpi
endsnippet

context "isMath()"
snippet rh "\rho" i
\rho
endsnippet

context "isMath()"
snippet rhv "\varrho" i
\varrho
endsnippet

context "isMath()"
snippet si "\sigma" i
\sigma
endsnippet

context "isMath()"
snippet siv "\sigma" i
\varsigma
endsnippet

context "isMath()"
snippet ta "\tau" i
\tau
endsnippet

context "isMath()"
snippet up "\upsilon" i
\upsilon
endsnippet

context "isMath()"
snippet ph "\phi" i
\phi
endsnippet

context "isMath()"
snippet phv "\varphi" i
\varphi
endsnippet

context "isMath()"
snippet ch "\ch" i
\chi
endsnippet

context "isMath()"
snippet ps "\ps" i
\psi
endsnippet

context "isMath()"
snippet om "\omega" i
\omega
endsnippet

context "isMath()"
snippet Ga "\Gamma" i
\Gamma
endsnippet

context "isMath()"
snippet Gav "\varGamma" i
\varGamma
endsnippet

context "isMath()"
snippet De "\Delta" i
\Delta
endsnippet

context "isMath()"
snippet Dev "\varDelta" i
\varDelta
endsnippet

context "isMath()"
snippet Th "\Theta" i
\Theta
endsnippet

context "isMath()"
snippet Thv "\varTheta" i
\varTheta
endsnippet

context "isMath()"
snippet La "\Lambda" i
\Lambda
endsnippet

context "isMath()"
snippet Lav "\varLambda" i
\Lambda
endsnippet

context "isMath()"
snippet Xi "\Xi" i
\Xi
endsnippet

context "isMath()"
snippet Xiv "\varXi" i
\varXi
endsnippet

context "isMath()"
snippet Pi "\Pi" i
\Pi
endsnippet

context "isMath()"
snippet Piv "\varPi" i
\varPi
endsnippet

context "isMath()"
snippet Si "\Sigma" i
\Sigma
endsnippet

context "isMath()"
snippet Siv "\varSigma" i
\varSigma
endsnippet

context "isMath()"
snippet Up "\Upsilon" i
\Upsilon
endsnippet

context "isMath()"
snippet Upv "\varUpsilon" i
\varUpsilon
endsnippet

context "isMath()"
snippet Ph "\Phi" i
\Phi
endsnippet

context "isMath()"
snippet Phv "\varPhi" i
\varPhi
endsnippet

context "isMath()"
snippet Ps "\Psi" i
\Psi
endsnippet

context "isMath()"
snippet Psv "\varPsi" i
\varPsi
endsnippet

context "isMath()"
snippet Om "\Omega" i
\Omega
endsnippet

context "isMath()"
snippet Omv "\varOmega" i
\varOmega
endsnippet

# Misc

snippet nc "newcommand" i
\newcommand{$1}{$2}
endsnippet

snippet sympy "sympy block " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "evaluate sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '') \
    .replace('^', '**') \
    .replace('{', '(') \
    .replace('}', ')') + ')')
`
endsnippet
